name: Preview Deployment
on: [pull_request]

env:
  NEON_PROJECT_ID: ${{ secrets.NEON_PROJECT_ID }} # You can find this in your Neon project settings

jobs:
  deploy-preview-db-branch:
    runs-on: ubuntu-latest

    # Only run one deployment at a time per PR.
    concurrency:
      group: pr-${{ github.event.number }}

    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "pnpm"

      - run: pnpm install

      - name: Get git branch name
        id: branch-name
        uses: tj-actions/branch-names@v8

      - id: create-branch
        uses: neondatabase/create-branch-action@v5
        with:
          project_id: ${{ env.NEON_PROJECT_ID }}
          username: "neondb_owner" # Change this to the role you use to connect to your database
          database: "neondb"
          # parent: dev # optional (defaults to your primary branch)
          branch_name: preview/pr-${{ github.event.number }}-${{ steps.branch-name.outputs.current_branch }}
          api_key: ${{ secrets.NEON_API_KEY }} # Generate an API key in your Neon account settings

        #needed to push to .env, pushing to #GITHUB_ENV doesnt work during vercel deployment
      - name: Save db url to .env
        run: echo "DATABASE_URL=${{ steps.create-branch.outputs.Db_url_with_pooler }}" >> "$GITHUB_ENV"
      - name: Save db url to .env
        run: echo "DATABASE_URL=${{ steps.create-branch.outputs.Db_url_with_pooler }}" >> .env

      - name: DB Migration
        run: pnpm run db:migrate

      - name: Install Vercel CLI
        run: pnpm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Preview to Vercel
        id: deploy
        run: echo "PREVIEW_URL=$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }})"  >> "$GITHUB_ENV"
      - name: Install testing browsers
        run: npx playwright install --with-deps
      - name: Run Playwright tests
        run: npx playwright test

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
